# utils.py

from pymongo import MongoClient
import os
import datetime
import pandas as pd

def get_bookings_from_db():
    """
    –û—Ç—Ä–∏–º—É—î –ø—Ä–∏—Å—Ç—Ä–æ—ó –∑ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è–º–∏ –∑ –ë–î —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞—î —Å–ø–∏—Å–æ–∫ –æ–±'—î–∫—Ç—ñ–≤ –∑ –æ—á–∏—â–µ–Ω–∏–º–∏ –¥–∞–Ω–∏–º–∏.
    """
    client = MongoClient("mongodb://localhost:27017/")
    db = client["computerClub"]
    collection = db["devices"]
    devices = list(collection.find())

    print(f"üìã –î–∞–Ω—ñ –∑ MongoDB: {len(devices)} –ø—Ä–∏—Å—Ç—Ä–æ—ó–≤")  # –õ–æ–≥—É–≤–∞–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –ø—Ä–∏—Å—Ç—Ä–æ—ó–≤

    cleaned_data = []

    for device in devices:
        zone = device.get("zone")
        bookings = device.get("bookings", [])
        
        if not zone or not isinstance(bookings, list):
            print(f"‚ùå –ü—Ä–∏—Å—Ç—Ä—ñ–π –≤–∏–∫–ª—é—á–µ–Ω–æ: zone={zone}, bookings={bookings}")
            continue

        valid_bookings = []
        for booking in bookings:
            start_time = booking.get("startTime")
            if not start_time:
                print(f"‚ùå –ë—Ä–æ–Ω—é–≤–∞–Ω–Ω—è –≤–∏–∫–ª—é—á–µ–Ω–æ: startTime={start_time}")
                continue

            # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç—É startTime
            if isinstance(start_time, dict) and "$date" in start_time:
                try:
                    start_time = pd.to_datetime(start_time["$date"])
                except Exception as e:
                    print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è startTime: {e}")
                    continue
            elif isinstance(start_time, str):
                try:
                    start_time = pd.to_datetime(start_time)
                except Exception as e:
                    print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è startTime: {e}")
                    continue
            elif not isinstance(start_time, (datetime.datetime, pd.Timestamp)):
                print(f"‚ùå –ë—Ä–æ–Ω—é–≤–∞–Ω–Ω—è –≤–∏–∫–ª—é—á–µ–Ω–æ: startTime –Ω–µ –≤–∞–ª—ñ–¥–Ω–∏–π {start_time}")
                continue

            valid_bookings.append(booking)  # –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –≤–µ—Å—å –æ–±‚Äô—î–∫—Ç –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è

        # –Ø–∫—â–æ —î —Ö–æ—á –æ–¥–Ω–µ –≤–∞–ª—ñ–¥–Ω–µ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è ‚Äî –¥–æ–¥–∞—î–º–æ
        if valid_bookings:
            cleaned_data.append({
                "zone": zone,
                "bookings": valid_bookings
            })
        else:
            print(f"‚ùå –ü—Ä–∏—Å—Ç—Ä—ñ–π –≤–∏–∫–ª—é—á–µ–Ω–æ —á–µ—Ä–µ–∑ –≤—ñ–¥—Å—É—Ç–Ω—ñ—Å—Ç—å –≤–∞–ª—ñ–¥–Ω–∏—Ö –±—Ä–æ–Ω—é–≤–∞–Ω—å: {device}")

    print(f"üìã –û—á–∏—â–µ–Ω—ñ –¥–∞–Ω—ñ: {len(cleaned_data)} –ø—Ä–∏—Å—Ç—Ä–æ—ó–≤ –∑ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è–º–∏")  # –õ–æ–≥—É–≤–∞–Ω–Ω—è –æ—á–∏—â–µ–Ω–∏—Ö –¥–∞–Ω–∏—Ö
    return cleaned_data